# Generated by Django 2.2.4 on 2022-05-12 13:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=255)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='documentscan/images')),
                ('doc_type', models.CharField(max_length=255, null=True)),
                ('raw_ocr_string', models.TextField(null=True)),
                ('sales', models.FloatField(default=0, null=True)),
                ('returns_and_allowances', models.FloatField(default=0, null=True)),
                ('net_sales', models.FloatField(default=0, null=True)),
                ('cogs', models.FloatField(default=0, null=True)),
                ('gross_profit', models.FloatField(default=0, null=True)),
                ('total_operating_expense', models.FloatField(default=0, null=True)),
                ('officer_compensation_expense', models.FloatField(default=0, null=True)),
                ('salaries_and_wages_expense', models.FloatField(default=0, null=True)),
                ('repairs_and_maintenence_expense', models.FloatField(default=0, null=True)),
                ('bad_debt_expense', models.FloatField(default=0, null=True)),
                ('rent_expense', models.FloatField(default=0, null=True)),
                ('taxes_and_licenses_expense', models.FloatField(default=0, null=True)),
                ('interest_expense', models.FloatField(default=0, null=True)),
                ('charitable_contributions_expense', models.FloatField(default=0, null=True)),
                ('depreciation_expense', models.FloatField(default=0, null=True)),
                ('depletion_expense', models.FloatField(default=0, null=True)),
                ('advertising_expense', models.FloatField(default=0, null=True)),
                ('pension_expense', models.FloatField(default=0, null=True)),
                ('employee_benefits_expense', models.FloatField(default=0, null=True)),
                ('reserved_for_future_use_expense', models.FloatField(default=0, null=True)),
                ('other_deductions_expense', models.FloatField(default=0, null=True)),
                ('taxable_income', models.FloatField(default=0, null=True)),
                ('dividend_revenue', models.FloatField(default=0, null=True)),
                ('interest_revenue', models.FloatField(default=0, null=True)),
                ('rent_revenue', models.FloatField(default=0, null=True)),
                ('royalty_revenue', models.FloatField(default=0, null=True)),
                ('capital_gain_revenue', models.FloatField(default=0, null=True)),
                ('net_gain_or_loss_revenue', models.FloatField(default=0, null=True)),
                ('other_income_revenue', models.FloatField(default=0, null=True)),
                ('income_tax_expense', models.FloatField(default=0, null=True)),
                ('net_income', models.FloatField(default=0, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='documentscan.Company')),
            ],
        ),
        migrations.CreateModel(
            name='IncomeStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sales', models.FloatField(default=0, null=True)),
                ('returns_and_allowances', models.FloatField(default=0, null=True)),
                ('net_sales', models.FloatField(default=0, null=True)),
                ('cogs', models.FloatField(default=0, null=True)),
                ('gross_profit', models.FloatField(default=0, null=True)),
                ('total_operating_expense', models.FloatField(default=0, null=True)),
                ('salaries_and_wages_expense', models.FloatField(default=0, null=True)),
                ('repairs_and_maintenence_expense', models.FloatField(default=0, null=True)),
                ('bad_debt_expense', models.FloatField(default=0, null=True)),
                ('rent_expense', models.FloatField(default=0, null=True)),
                ('taxes_and_licenses_expense', models.FloatField(default=0, null=True)),
                ('interest_expense', models.FloatField(default=0, null=True)),
                ('charitable_contributions_expense', models.FloatField(default=0, null=True)),
                ('depreciation_expense', models.FloatField(default=0, null=True)),
                ('depletion_expense', models.FloatField(default=0, null=True)),
                ('advertising_expense', models.FloatField(default=0, null=True)),
                ('operating_profit', models.FloatField(default=0, null=True)),
                ('other_income', models.FloatField(default=0, null=True)),
                ('taxable_income', models.FloatField(default=0, null=True)),
                ('income_tax_expense', models.FloatField(default=0, null=True)),
                ('net_income', models.FloatField(default=0, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incomestatements', to='documentscan.Document')),
            ],
        ),
    ]
